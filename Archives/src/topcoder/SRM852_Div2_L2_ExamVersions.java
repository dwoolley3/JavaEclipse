//import java.util.*;
//import java.util.regex.*;
//import java.text.*;
//import java.math.*;
package topcoder;

public class SRM852_Div2_L2_ExamVersions
{
	public String[] distribute(int R, int C, int N)
	{
		String[] s = new String[R];
		if (C == 1 && R == 1) {
			return new String[] {"A"};
		} else if (N == 1) {
			return new String[] {};
		}
		else if (R == 1) {
			s[0] = "";		
			for (int c = 0; c < C; c++) {
				s[0] += (c%2 == 0) ? "A" : "B";
			}
		} else if (C == 1) {
			for (int r = 0; r < R; r++) {
				s[r] = (r%2 == 0) ? "A" : "B";
			}
		}
		else if (N < 4) {
			return new String[] {};
		}
		else { //R >= 2 and C >= 2 			
			for (int r = 0; r < R; r++) {
				s[r] = "";
				for (int c = 0; c < C; c++) {
					char ch = (char) (65 + ((r % 2) * 2 + c) % N);
					s[r] += ch;
				}
			}
		}

		return s;
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, int p0, int p1, int p2, boolean hasAnswer, String[] p3) {
		System.out.print("Test " + testNum + ": [" + p0 + "," + p1 + "," + p2);
		System.out.println("]");
		SRM852_Div2_L2_ExamVersions obj;
		String[] answer;
		obj = new SRM852_Div2_L2_ExamVersions();
		long startTime = System.currentTimeMillis();
		answer = obj.distribute(p0, p1, p2);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.print("\t" + "{");
			for (int i = 0; p3.length > i; ++i) {
				if (i > 0) {
					System.out.print(",");
				}
				System.out.print("\"" + p3[i] + "\"");
			}
			System.out.println("}");
		}
		System.out.println("Your answer:");
		System.out.print("\t" + "{");
		for (int i = 0; answer.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print("\"" + answer[i] + "\"");
		}
		System.out.println("}");
		if (hasAnswer) {
			if (answer.length != p3.length) {
				res = false;
			} else {
				for (int i = 0; answer.length > i; ++i) {
					if (!answer[i].equals(p3[i])) {
						res = false;
					}
				}
			}
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		int p0;
		int p1;
		int p2;
		String[] p3;
		
		// ----- test 0 -----
		p0 = 1;
		p1 = 8;
		p2 = 25;
		p3 = new String[]{"TOPCODER"};
		all_right = KawigiEdit_RunTest(0, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = 3;
		p1 = 5;
		p2 = 7;
		p3 = new String[]{"CAGEB","FDCFG","EBAED"};
		all_right = KawigiEdit_RunTest(1, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = 5;
		p1 = 1;
		p2 = 3;
		p3 = new String[]{"B","A","C","B","C"};
		all_right = KawigiEdit_RunTest(2, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = 7;
		p1 = 4;
		p2 = 2;
		p3 = new String[]{};
		all_right = KawigiEdit_RunTest(3, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = 4;
		p1 = 4;
		p2 = 4;
		p3 = new String[]{"ABCD","CDAB","ABCD","CDAB"};
		all_right = KawigiEdit_RunTest(3, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = 1;
		p1 = 1;
		p2 = 1;
		p3 = new String[]{"A"};
		all_right = KawigiEdit_RunTest(3, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = 1;
		p1 = 2;
		p2 = 1;
		p3 = new String[]{};
		all_right = KawigiEdit_RunTest(3, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = 2;
		p1 = 1;
		p2 = 1;
		p3 = new String[]{};
		all_right = KawigiEdit_RunTest(3, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = 2;
		p1 = 2;
		p2 = 2;
		p3 = new String[]{};
		all_right = KawigiEdit_RunTest(3, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = 3;
		p1 = 1;
		p2 = 2;
		p3 = new String[]{"A","B","A"};
		all_right = KawigiEdit_RunTest(3, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = 1;
		p1 = 4;
		p2 = 2;
		p3 = new String[]{"ABAB"};
		all_right = KawigiEdit_RunTest(3, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
