package topcoder;
import java.util.*;
//import java.util.regex.*;
//import java.text.*;
//import java.math.*;


public class SRM852_Div2_L1_AdventCalendar
{
	public String[] eat(String[] calendar)
	{
		int n = calendar.length;
		ArrayList<Integer> al = new ArrayList<>();
		for (int i = 0; i < n; i++) {
			calendar[i] = " " + calendar[i] + " ";
			String[] st = calendar[i].split(" "); 
			for (String s : st) {
				if (s.equals("X") || s.equals("XX") || s.isEmpty()) continue;
				al.add(Integer.valueOf(s));
			}			
		}
		Collections.sort(al);
		//System.out.println(al.get(0));
		String first = "" + al.get(0);
		boolean chg = false;
		String repX = (first.length() == 2) ? "XX" : "X";
		String f = " " + first + " ";
		for (int i = 0; i < n && !chg; i++) {
			if ((calendar[i]).contains(f)) {
				calendar[i] = calendar[i].replace(f, " " + repX + " ");
				chg = true;
			}
		}

		for (int i = 0; i < n; i++) {
			calendar[i] = calendar[i].substring(1, calendar[i].length() - 1);
		}
		
		return calendar;
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, String[] p0, boolean hasAnswer, String[] p1) {
		System.out.print("Test " + testNum + ": [" + "{");
		for (int i = 0; p0.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print("\"" + p0[i] + "\"");
		}
		System.out.print("}");
		System.out.println("]");
		SRM852_Div2_L1_AdventCalendar obj;
		String[] answer;
		obj = new SRM852_Div2_L1_AdventCalendar();
		long startTime = System.currentTimeMillis();
		answer = obj.eat(p0);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.print("\t" + "{");
			for (int i = 0; p1.length > i; ++i) {
				if (i > 0) {
					System.out.print(",");
				}
				System.out.print("\"" + p1[i] + "\"");
			}
			System.out.println("}");
		}
		System.out.println("Your answer:");
		System.out.print("\t" + "{");
		for (int i = 0; answer.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print("\"" + answer[i] + "\"");
		}
		System.out.println("}");
		if (hasAnswer) {
			if (answer.length != p1.length) {
				res = false;
			} else {
				for (int i = 0; answer.length > i; ++i) {
					if (!answer[i].equals(p1[i])) {
						res = false;
					}
				}
			}
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		String[] p0;
		String[] p1;
		
		// ----- test 0 -----
		p0 = new String[]{"19     9        2   24  10 ","1", "         18     7 3       11"," 20   21 4    17       16    23","  14         12      6    5      ","      8    22     13        15"};
		p1 = new String[]{"19     9        2   24  10 ","X", "         18     7 3       11"," 20   21 4    17       16    23","  14         12      6    5      ","      8    22     13        15"};
		all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
		// ------------------

		
		// ----- test 0 -----
		p0 = new String[]{"19     9        2   24  10 ","  1       18     7 3       11"," 20   21 4    17       16    23","  14         12      6    5      ","      8    22     13        15"};
		p1 = new String[]{"19     9        2   24  10 ","  X       18     7 3       11"," 20   21 4    17       16    23","  14         12      6    5      ","      8    22     13        15"};
		all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = new String[]{"19     9        X   24  10 ","  X       18     7 3       11"," 20   21 4    17       16    23","  14         12      6    5      ","      8    22     13        15"};
		p1 = new String[]{"19     9        X   24  10 ","  X       18     7 X       11"," 20   21 4    17       16    23","  14         12      6    5      ","      8    22     13        15"};
		all_right = KawigiEdit_RunTest(1, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = new String[]{"X X X X X X X X X XX XX XX XX XX","XX XX 17 18 19 20 21 22 23 24"};
		p1 = new String[]{"X X X X X X X X X XX XX XX XX XX","XX XX XX 18 19 20 21 22 23 24"};
		all_right = KawigiEdit_RunTest(2, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = new String[]{"X X X X X X X X X XX XX XX XX XX","17 XX XX 18 19 20 21 22 23 24"};
		p1 = new String[]{"X X X X X X X X X XX XX XX XX XX","XX XX XX 18 19 20 21 22 23 24"};
		all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = new String[]{"X X X X X X X X X XX XX XX XX XX","17", " XX XX 18 19 20 21 22 23 24"};
		p1 = new String[]{"X X X X X X X X X XX XX XX XX XX","XX", " XX XX 18 19 20 21 22 23 24"};
		all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
